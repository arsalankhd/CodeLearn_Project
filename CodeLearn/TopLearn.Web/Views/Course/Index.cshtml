@using CodeLearn.DataLayer.Entities.Course
@model Tuple<List<CodeLearn.Core.DTOs.Courses.ShowCourseListItemViewModel>,int>
@{
    ViewData["Title"] = "دوره ها";
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">کد لرن</a></li>
            <li class="breadcrumb-item active"><a href="/Course">دوره ها</a></li>
        </ul>
    </nav>
</div>

<div class="container">
    <form id="formFilter" action="/Course" method="get">
        <input type="hidden" id="pageid" name="pageId" value="@ViewBag.PageId.ToString()" />
        <section class="term-categories">

            <div class="top-bar">

                <header>
                    <h1> جستجوی دوره ها </h1> <span> @Model.Item1.Count  دوره </span>
                </header>

                <div class="row">
                    <div class="col-md-4 col-sm-12 col-xs-12 pull-right">
                        <div class="input">
                            <input type="text" name="filter" placeholder="موضوع مورد نظر ...">
                            <button><i class="zmdi zmdi-search"></i></button>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-right">
                        <div class="switch-field available">
                            @{
                                var type = ViewBag.getType;
                            }
                            <input id="available-filter-1" name="getType" class="formInput" value="all" type="radio" checked="">
                            <label for="available-filter-1"> همه </label>
                            <input id="available-filter-2" name="getType" class="formInput" value="buy" type="radio" @((type!=null && type=="buy")?"checked":"")>
                            <label for="available-filter-2"> خریدنی </label>
                            <input id="available-filter-3" name="getType" class="formInput" value="free" type="radio" @((type!=null && type=="free")?"checked":"")>
                            <label for="available-filter-3"> رایگان </label>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-left">
                        @{
                            var orderType = ViewData["OrderByType"] as string;
                        }
                        <div class="select-ddl">
                            <select name="orderByType" class="formInput">
                                <option value="date" selected="@((orderType!=null && orderType=="date")?true:false)"> تاریخ انتشار </option>
                                <option value="updatedate" selected="@((orderType!=null && orderType=="updatedate")?true:false)"> تاریخ بروزرسانی </option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">

                <aside class="col-lg-3 col-md-4 col-sm-12 col-xs-12">

                    <section class="aside-section filter-by-price">
                        <header>
                            <h3> فیلتر بر اساس قیمت </h3>
                        </header>
                        <div class="price-range">
                            <input type="hidden" value="" id="min-value" name="startPrice">
                            <input type="hidden" value="" id="max-value" name="endPrice">
                            <div class="price-bar">
                                <div id="priceFilter"></div>
                            </div>
                            <div class="max-price">تا <span id="max-text">1000000</span> تومان</div>
                            <div class="min-price">از <span id="min-text">0</span> تومان</div>
                            <div class="clearfix"></div>
                        </div>
                    </section>

                    <section class="aside-section filter-by-category">
                        <header>
                            <h3> دسته بندی موضوعات </h3>
                        </header>
                        <div class="inner">
                            @{
                                List<CourseGroup> groups = ViewBag.Groups as List<CourseGroup>;
                                List<int> selected = ViewBag.selectedGroups as List<int>;
                            }
                            <ul>
                                <li>
                                    <input type="checkbox" class="formInput" id="cat-0" checked="" />
                                    <label for="cat-0"> همه دسته بندی ها </label>
                                </li>
                                @foreach (var group in groups.Where(g => g.ParentId == null))
                                {
                                    <li>
                                        <input type="checkbox" name="selectedGroups" class="formInput" value="@group.GroupId" id="cat-1" @((selected.Any(s => s == group.GroupId) ? "checked" : ""))>
                                        <label for="cat-1"> @group.GroupTitle </label>
                                        @if (groups.Any(g => g.ParentId == group.GroupId))
                                        {
                                            <ul>
                                                @foreach (var sub in groups.Where(g => g.ParentId == group.GroupId))
                                                {
                                                    <li>
                                                        <input type="checkbox" name="selectedGroups" class="formInput" value="@sub.GroupId" id="cat-1" @((selected.Any(s => s == sub.GroupId) ? "checked" : ""))>
                                                        <label for="cat-1"> @sub.GroupTitle </label>
                                                    </li>
                                                }
                                            </ul>

                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </section>

                </aside>

                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12">

                    <section class="terms-items">
                        <div class="row">
                            @foreach (var item in Model.Item1)
                            {
                                <partial name="_BoxCourse" model="@item" />
                            }
                        </div>

                        @if (Model.Item2 > 0)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    @for (int i = 1; i <= Model.Item2; i++)
                                    {
                                        <li class="page-item"><a class="page-link" onclick="changePage(@i)" href="#">@i</a></li>
                                    }
                                </ul>

                            </nav>
                        }

                    </section>


                </div>
            </div>
        </section>
    </form>
</div>

@section Scripts
    {
    <script src="/noUiSlider/nouislider.min.js"></script>
    <script src="/js/script.js"></script>
    <script type="text/javascript">

        function changePage(pageid) {
            $("pageid").val(pageid);
            $("#formFilter").submit();
        }

        $(function() {

            var slider = document.getElementById('priceFilter');
            noUiSlider.create(slider, {
                start: [0, 1000000],
                step: 5000,
                connect: true,
                direction: 'rtl',
                range: {
                    'min': 0,
                    'max': 1000000
                }
            });

            var marginMin = document.getElementById('min-text'),
                marginMax = document.getElementById('max-text');

            slider.noUiSlider.on('update', function(values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    marginMax.innerHTML = xvalue;
                } else {
                    marginMin.innerHTML = xvalue;
                }
                //console.log(values[handle]);
            });

            slider.noUiSlider.on('change', function(values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    // setGetParameter('max_price', xvalue);
                    $('#max-value').val(xvalue);
                } else {
                    // setGetParameter('min_price', xvalue);
                    $('#min-value').val(xvalue);
                }
            });


            slider.noUiSlider.on('slide', function(values, handle) {

                console.log(values[0]);
                console.log(values[1]);

                var xvalue = Math.round(values[handle]);
                //updateSliderRange( Math.round(values[0]), Math.round(values[1]) );
            });


            function updateSliderRange(min, max) {
                slider.noUiSlider.updateOptions({
                    range: {
                        'min': min,
                        'max': max
                    }
                });
            }
        });

        //function changeGroup() {
        //    $("#formFilter").submit();
        //}

        $(".formInput").change(function() {
            $("#formFilter").submit();
        })
    </script>
}
